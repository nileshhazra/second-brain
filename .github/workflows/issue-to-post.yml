name: Issue to Blog Post

on:
  issues:
    types: [opened, edited, closed]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Process Issue
        # We add the "env" block here to safely handle special characters
        env:
          ISSUE_TITLE: '${{ github.event.issue.title }}'
          ISSUE_BODY: '${{ github.event.issue.body }}'
          ISSUE_NUMBER: '${{ github.event.issue.number }}'
          ISSUE_LABELS_JSON: '${{ toJSON(github.event.issue.labels.*.name) }}'
          ISSUE_URL: '${{ github.event.issue.html_url }}'

        run: |
          # The variables are now safely available from the environment
          # We convert the JSON array of labels to a comma-separated string
          ISSUE_LABELS=$(echo $ISSUE_LABELS_JSON | jq -r 'join(", ")')

          # If the issue is closed, we delete the post
          if [[ "${{ github.event.action }}" == "closed" ]]; then
            find _posts -type f -name "*-issue-${ISSUE_NUMBER}.md" -delete
            echo "Post for issue #${ISSUE_NUMBER} deleted."
            exit 0
          fi

          # Create filename with date and issue number for uniqueness
          FILENAME="_posts/$(date +'%Y-%m-%d')-issue-${ISSUE_NUMBER}.md"

          # Create Markdown file with Jekyll Front Matter
          echo "---" > $FILENAME
          echo "layout: post" >> $FILENAME
          echo "title: \"$ISSUE_TITLE\"" >> $FILENAME
          echo "date: $(date -u +'%Y-%m-%d %H:%M:%S %Z')" >> $FILENAME
          echo "tags: [$ISSUE_LABELS]" >> $FILENAME
          echo "issue_number: $ISSUE_NUMBER" >> $FILENAME
          echo "---" >> $FILENAME
          echo "" >> $FILENAME
          # This now safely prints the body, regardless of its content
          echo "$ISSUE_BODY" >> $FILENAME
          echo "" >> $FILENAME
          echo "<hr>" >> $FILENAME
          echo "**Have comments or questions?** Join the discussion on the original [GitHub Issue]($ISSUE_URL)." >> $FILENAME
      - name: Commit and Push
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Blog: Add/Update post from issue #${{ github.event.issue.number }}'
          file_pattern: '_posts/*.md'
          branch: main
